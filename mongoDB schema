// Define the Farmer collection
db.createCollection('Farmers', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["farmer_name"],
      properties: {
        farmer_id: {
          bsonType: "int"
        },
        farmer_name: {
          bsonType: "string"
        },
        address: {
          bsonType: "string"
        }
      }
    }
  }
});

// Define the Product collection
db.createCollection('Products', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["product_name", "price_per_kilo"],
      properties: {
        product_id: {
          bsonType: "int"
        },
        product_name: {
          bsonType: "string"
        },
        price_per_kilo: {
          bsonType: "double"
        },
        stock_quantity: {
          bsonType: "int",
          default: 0
        }
      }
    }
  }
});

// Define the Purchase collection
db.createCollection('Purchases', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["purchase_date", "purchase_time", "payment_type", "amount_paid", "total_amount", "kilos_purchased", "cost_per_kilo"],
      properties: {
        purchase_id: {
          bsonType: "int"
        },
        farmer_id: {
          bsonType: "int"
        },
        product_id: {
          bsonType: "int"
        },
        purchase_date: {
          bsonType: "date"
        },
        purchase_time: {
          bsonType: "string"
        },
        payment_type: {
          bsonType: "string"
        },
        amount_paid: {
          bsonType: "double"
        },
        total_amount: {
          bsonType: "double"
        },
        kilos_purchased: {
          bsonType: "double"
        },
        cost_per_kilo: {
          bsonType: "double"
        }
      }
    }
  }
});

// Define the PaymentHistory collection
db.createCollection('PaymentHistory', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["payment_date", "amount_paid"],
      properties: {
        payment_id: {
          bsonType: "int"
        },
        purchase_id: {
          bsonType: "int"
        },
        payment_date: {
          bsonType: "date"
        },
        amount_paid: {
          bsonType: "double"
        }
      }
    }
  }
});

// Define the Loans collection
db.createCollection('Loans', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["loan_amount", "interest_rate"],
      properties: {
        loan_id: {
          bsonType: "int"
        },
        purchase_id: {
          bsonType: "int"
        },
        loan_amount: {
          bsonType: "double"
        },
        interest_rate: {
          bsonType: "double"
        },
        repayment_terms: {
          bsonType: "string"
        },
        loan_status: {
          bsonType: "string"
        }
      }
    }
  }
});

// Define the Reports collection
db.createCollection('Reports', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["report_date", "total_purchases", "total_amount_paid"],
      properties: {
        report_id: {
          bsonType: "int"
        },
        report_date: {
          bsonType: "date"
        },
        total_purchases: {
          bsonType: "double"
        },
        total_amount_paid: {
          bsonType: "double"
        }
      }
    }
  }
});

// Define the Users collection
db.createCollection('Users', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["username", "password"],
      properties: {
        user_id: {
          bsonType: "int"
        },
        username: {
          bsonType: "string"
        },
        password: {
          bsonType: "string"
        },
        role: {
          bsonType: "string"
        }
      }
    }
  }
});


// Index for the farmer_id field in Purchases collection
db.Purchases.createIndex({ farmer_id: 1 });

// Index for the product_id field in Purchases collection
db.Purchases.createIndex({ product_id: 1 });

// Index for the purchase_id field in PaymentHistory collection
db.PaymentHistory.createIndex({ purchase_id: 1 });

// Index for the purchase_id field in Loans collection
db.Loans.createIndex({ purchase_id: 1 });
